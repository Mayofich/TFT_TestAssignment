// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TFT_Test.Data;

#nullable disable

namespace TFT_Test.Migrations.ActorList
{
    [DbContext(typeof(ActorListContext))]
    [Migration("20230414160903_Actor")]
    partial class Actor
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TFT_Test.Models.Actor", b =>
                {
                    b.Property<int>("ActorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ActorId"));

                    b.Property<string>("ActorAdress")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ActorEmail")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ActorName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ActorPassword")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ActorSurname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("ExpectedFee")
                        .HasColumnType("integer");

                    b.HasKey("ActorId");

                    b.ToTable("Actors");
                });
#pragma warning restore 612, 618
        }
    }
}
